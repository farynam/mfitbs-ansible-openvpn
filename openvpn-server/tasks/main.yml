- include_role:
    name: "{{roleinputvar}}"
  loop:
    - openvpn-generic
    - openvpn-easyrsa
  loop_control:
    loop_var: roleinputvar

- name: Build Server Cert
  shell: easyrsa --subject-alt-name="{{id_type}}:{{ansible_host}}" build-server-full {{server_name}} nopass
  args:
    chdir: /root
    creates: "{{PKI_DIR}}/issued/{{server_name}}.crt"
  environment:
    PATH: "{{ EASY_RSA_BIN }}:{{ansible_env.PATH}}"

- name: Copy Server cert to the Server
  shell: rsync -az --rsh="/usr/bin/sshpass -p {{ansible_password}} ssh -o StrictHostKeyChecking=no -l root" "{{easy_rsa_host_ip}}:{{PKI_DIR}}/issued/{{ansible_host}}.crt" "{{host_pki_dir}}/{{ansible_host}}.crt"
  args:
    creates: "{{host_pki_dir}}/{{ansible_host}}.crt"

- name: Copy Server key to the Server
  shell: rsync -az --rsh="/usr/bin/sshpass -p {{ansible_password}} ssh -o StrictHostKeyChecking=no -l root" "{{easy_rsa_host_ip}}:{{PKI_DIR}}/private/{{ansible_host}}.key" "{{host_pki_dir}}/{{ansible_host}}.key"
  args:
    creates: "{{host_pki_dir}}/{{ansible_host}}.key"

- name: Copy CA to the server
  shell: rsync -az --rsh="/usr/bin/sshpass -p {{ansible_password}} ssh -o StrictHostKeyChecking=no -l root" "{{easy_rsa_host_ip}}:{{PKI_DIR}}/{{ca_cn}}.crt" "{{host_pki_dir}}/{{ca_cn}}.crt"
  args:
    creates: "{{host_pki_dir}}/{{ca_cn}}.crt"

- name: Generate secret
  command: openvpn --genkey --secret {{host_pki_dir}}/ta.key
  args:
    creates: "{{host_pki_dir}}/ta.key"

- name: Template server.conf
  template:
    src: templates/server.conf
    dest: /etc/openvpn/server.conf
    owner: root
    group: root
    mode: '0660'

- name: Create ccd dir
  file:
    path: /etc/openvpn/ccd
    state: directory
    mode: '0770'

- name: Enable Server
  shell: systemctl enable openvpn@server.service

- name: Restart openvpn
  shell: systemctl restart openvpn@server.service
